<?php

    $pcaAccCode = Mage::getStoreConfig('addresslookup_options/login/account_code');
    $pcaCustomCode = Mage::getStoreConfig('addresslookup_options/settings/custom_code_admin');

    if($pcaAccCode) {
?>

<script type="text/javascript">

  

    (function (a, c, b, e) {
    a[b] = a[b] || {}; a[b].initial = { accountCode: "<?php echo $pcaAccCode; ?>", host: "<?php echo $pcaAccCode; ?>.addressy.com" };
    a[b].on = a[b].on || function () { (a[b].onq = a[b].onq || []).push(arguments) }; var d = c.createElement("script");
    d.async = !0; d.src = e; c = c.getElementsByTagName("script")[0]; c.parentNode.insertBefore(d, c)
})(window, document, "pca", "//<?php echo $pcaAccCode; ?>.addressy.com/js/sensor.js");

    if(typeof(customerAddresses) == "object" && typeof(customerAddresses.addNewAddress) == "function"){
        //this is the address book page

        //1: Duck punch new address
        var pca_saved_newAddress = customerAddresses.addNewAddress;
        customerAddresses.addNewAddress = function(){
            var ret = pca_saved_newAddress.apply(this, arguments);
            pca.load();
            pca_setup_clicks();
            console.log(calculateShowingAddress());
            return ret;
        };

        //2: tie into address click
        function pca_setup_clicks(){
            var listitems = document.querySelectorAll("#address_list li");
            for(var i = 0; i < listitems.length; i++){
                var el = listitems[i];
                if(!el.pca_click){
                    el.pca_click = function(){
                        pca.load();
                        console.log(calculateShowingAddress());
                    }
                    el.addEventListener("click", el.pca_click);
                }
            }
        }
        pca_setup_clicks();

        //3: work out what address is showing
        function calculateShowingAddress(){
            var showingAddressItem = document.querySelector("#address_list li.on input[type=radio]").value.toLowerCase().replace('_item',''); //e.g. 4
            return showingAddressItem;
        }

        //4: set pca on load to correct mappings
        pca.on("load", function(type, key, control){
            for(var f = 0; f < control.fields.length; f++){
                control.fields[f].element = control.fields[f].element.replace(/_item\[0-9\]\*|_item[0-9]*/g, "_item" + calculateShowingAddress());
            }
            control.load();
        });
    }

    <?php
        if($pcaCustomCode) {
            echo $pcaCustomCode;
        }
    ?>

</script>

<?php } ?>